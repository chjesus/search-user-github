{"version":3,"sources":["components/Nav/Nav.js","components/Search/Search.js","utils/constants.js","components/Button/Buttons.js","components/ListUser/ListUser.js","App.js","index.js"],"names":["Nav","className","span","GithubOutlined","Search","Input","Searchs","props","setMessage","allUsers","useState","loading","setLoading","addUserLocalStorage","data","allUserArray","find","user","id","push","localStorage","setItem","JSON","stringify","setSearchUser","value","a","fetch","response","status","json","placeholder","onSearch","prefix","UserOutlined","Buttons","type","url","danger","target","index","deleteUser","lg","xl","href","onClick","Meta","Card","User","length","gutter","map","key","avatar","src","avatar_url","title","name","description","bio","style","width","marginTop","justify","html_url","Header","Layout","Content","App","messageNotification","setAllUsers","realoadUser","setReloadUser","useEffect","allUsersStorage","getItem","parse","message","error","success","warning","ListUser","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4f1ca40.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { GithubOutlined } from \"@ant-design/icons\";\nimport { Row, Col } from \"antd\";\nimport \"./nav.scss\";\n\nfunction Nav() {\n  return (\n    <Row className=\"nav\">\n      <Col span={1} className=\"nav-col\">\n        <GithubOutlined className=\"nav-col-icon\" />\n      </Col>\n      <Col span={23}>\n        <p className=\"nav-text\">Search user with github</p>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Nav;\n","import React, { useState } from \"react\";\n\nimport { USER_STORAGE } from \"./../../utils/constants\";\n\nimport { Row, Col, Input } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\n\nimport \"./search.scss\";\n\nconst { Search } = Input;\n\nfunction Searchs(props) {\n  const { setMessage, allUsers } = props;\n\n  const [loading, setLoading] = useState(false);\n\n  const addUserLocalStorage = (data) => {\n    let allUserArray = [];\n\n    if (allUsers) allUserArray = allUsers;\n\n    const resultado = allUserArray.find((user) => user.id === data.id);\n\n    if (resultado) {\n      setMessage(\"already\");\n    } else {\n      allUserArray.push(data);\n      localStorage.setItem(USER_STORAGE, JSON.stringify(allUserArray));\n      allUserArray = [];\n      setMessage(\"success\");\n    }\n  };\n\n  const setSearchUser = async (value) => {\n    if (value === \"\") {\n      setMessage(\"empty\");\n    } else {\n      setLoading(true);\n\n      try {\n        const response = await fetch(`https://api.github.com/users/${value}`);\n        if (response.status !== 200) {\n          setMessage(\"error\");\n        } else {\n          const data = await response.json();\n          addUserLocalStorage(data);\n        }\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n      }\n    }\n  };\n\n  return (\n    <Row>\n      <Col span={24} className=\"search\">\n        <Search\n          className=\"search-input\"\n          placeholder=\"Search user\"\n          onSearch={(value) => setSearchUser(value)}\n          prefix={<UserOutlined className=\"search-icon\" />}\n          loading={loading}\n        />\n      </Col>\n    </Row>\n  );\n}\n\nexport default Searchs;\n","export const USER_STORAGE = \"list\";\n","import React from \"react\";\n\nimport { Col, Button } from \"antd\";\n\nfunction Buttons(props) {\n  const { type, url, danger, value, target, index, deleteUser } = props;\n  return (\n    <Col lg={10} xl={7}>\n      <Button\n        type={type}\n        danger={danger}\n        href={url}\n        target={target}\n        onClick={() => {\n          deleteUser && deleteUser(index);\n        }}\n      >\n        {value}\n      </Button>\n    </Col>\n  );\n}\n\nexport default Buttons;\n","import React from \"react\";\n\nimport { Row, Col, Card, Avatar } from \"antd\";\n\nimport Buttons from \"./../Button\";\n\nimport \"./listuser.scss\";\n\nconst { Meta } = Card;\n\nfunction User(props) {\n  const { allUsers, deleteUser } = props;\n\n  if (!allUsers || allUsers.length === 0) {\n    return (\n      <Row className=\"list\">\n        <Col span={24} className=\"list-not-found\">\n          No Users\n        </Col>\n      </Row>\n    );\n  }\n\n  return (\n    <Row className=\"list\" gutter={16}>\n      {allUsers.map((user, index) => (\n        <Col className=\"gutter-row\" span={6} key={index}>\n          <Card>\n            <Meta\n              avatar={<Avatar src={user.avatar_url} />}\n              title={user.name}\n              description={user.bio}\n            />\n\n            <Row style={{ width: \"100%\", marginTop: \"20px\" }} justify=\"end\">\n              <Buttons\n                type=\"link\"\n                target=\"_blank\"\n                url={user.html_url}\n                value=\"Link\"\n              />\n              <Buttons\n                type=\"primary\"\n                danger={true}\n                value=\"Delete\"\n                index={index}\n                deleteUser={deleteUser}\n              />\n            </Row>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n}\n\nexport default User;\n","import React, { useState, useEffect } from \"react\";\n\nimport Nav from \"./components/Nav\";\nimport Searchs from \"./components/Search\";\nimport ListUser from \"./components/ListUser\";\n\nimport { USER_STORAGE } from \"./utils/constants\";\n\nimport { Layout, message } from \"antd\";\n\nimport \"./App.scss\";\n\nconst { Header, Content } = Layout;\n\nfunction App() {\n  const [messageNotification, setMessage] = useState(\"\");\n  const [allUsers, setAllUsers] = useState([]);\n  const [realoadUser, setReloadUser] = useState([]);\n\n  const error = () => message.error(\"User not Found\");\n  const success = () => message.success(\"User Found\");\n  const already = () => message.warning(\"The user has already been added\");\n  const empty = () => message.warning(\"Empty Field\");\n\n  useEffect(() => {\n    const allUsersStorage = localStorage.getItem(USER_STORAGE);\n    const allUserArray = JSON.parse(allUsersStorage);\n    setAllUsers(allUserArray);\n    setReloadUser(false);\n  }, [realoadUser]);\n\n  useEffect(() => {\n    if (messageNotification === \"error\") error();\n    else if (messageNotification === \"success\") success();\n    else if (messageNotification === \"already\") already();\n    else if (messageNotification === \"empty\") empty();\n    setMessage(\"\");\n  }, [messageNotification]);\n\n  const deleteUser = (index) => {\n    allUsers.splice(index, 1);\n    setAllUsers(allUsers);\n    localStorage.setItem(USER_STORAGE, JSON.stringify(allUsers));\n    setReloadUser(true);\n  };\n\n  return (\n    <Layout className=\"container\">\n      <Header>\n        <Nav />\n      </Header>\n      <Content className=\"container-user\">\n        <Searchs setMessage={setMessage} allUsers={allUsers} />\n        <ListUser allUsers={allUsers} deleteUser={deleteUser} />\n      </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}